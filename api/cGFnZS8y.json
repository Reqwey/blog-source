{"per_page":10,"total":3,"current":2,"data":[{"title":"【Solution】Muddy Fields G-二分图匹配","date":"2021-10-18T21:28:00.000Z","date_formatted":{"ll":"Oct 18, 2021","L":"10/18/2021","MM-DD":"10-18"},"excerpt":"<p><a href=\"https://www.luogu.com.cn/problem/P6062\" target=\"_blank\">题目传送门。</a></p>\n<h2 id=\"建模\">建模<a title=\"#建模\" href=\"#建模\"></a></h2>\n<blockquote>\n<p>二分图匹配的模型有两个要素：</p>\n<ol>\n<li>\n<p>节点能分成独立的两个集合，每个集合内部有 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.162ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 500.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">0</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"0\" y=\"0\"></use>\n</g>\n</svg> 条边：<strong><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.162ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 500.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">0</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"0\" y=\"0\"></use>\n</g>\n</svg> 要素</strong></p>\n</li>\n<li>\n<p>每个节点只能与 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.162ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 500.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">1</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"0\" y=\"0\"></use>\n</g>\n</svg> 条匹配边相连：<strong><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.162ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 500.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">1</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"0\" y=\"0\"></use>\n</g>\n</svg> 要素</strong></p>\n<p>——摘自李煜东《算法竞赛进阶指南》</p>\n</li>\n</ol>\n</blockquote>","link":"solution-luogu-6062","tags":["二分图","匈牙利算法"],"categories":["OI","Solution"]},{"title":"【Algorithm Notes】并查集按秩合并","date":"2021-08-10T00:00:00.000Z","date_formatted":{"ll":"Aug 10, 2021","L":"08/10/2021","MM-DD":"08-10"},"excerpt":"<p>我们都知道，并查集的路径压缩大大加速了操作的时间复杂度，但是如果出题人足够毒瘤，仍然可以把你卡掉。</p>","link":"algorithm-merge-by-rank","tags":["并查集","按秩合并"],"categories":["Algorithm","OI"]},{"title":"【Solution】砝码称重-DP+bitset","date":"2021-07-31T00:00:00.000Z","date_formatted":{"ll":"Jul 31, 2021","L":"07/31/2021","MM-DD":"07-31"},"excerpt":"<p><a href=\"https://www.luogu.com.cn/problem/P1441\" target=\"_blank\">原题传送门</a></p>","link":"solution-luogu-1441","tags":["DP","bitset","卡常"],"categories":["OI","Solution"]},{"title":"【Solution】[NOIP2017 提高组] 宝藏-状压DP","date":"2021-07-31T00:00:00.000Z","date_formatted":{"ll":"Jul 31, 2021","L":"07/31/2021","MM-DD":"07-31"},"excerpt":"<p><a href=\"https://www.luogu.com.cn/problem/P3959\" target=\"_blank\">原题传送门</a></p>","link":"solution-luogu-3959","tags":["动态规划，DP","卡常"],"categories":["OI","Solution"]},{"title":"【Algorithm Notes】线段树的一些技巧","date":"2020-11-07T00:00:00.000Z","date_formatted":{"ll":"Nov 7, 2020","L":"11/07/2020","MM-DD":"11-07"},"excerpt":"<blockquote>\n<p>线段树, OI中最为常用的一种数据结构之一, 特点是结构美丽, 性质特殊, 可以用来解决很多看似不相干的问题。</p>\n</blockquote>","link":"segment-tree-tricks","tags":["数据结构","线段树"],"categories":["Algorithm","OI"]},{"title":"【Algorithm Notes】数学","date":"2020-08-30T22:24:00.000Z","date_formatted":{"ll":"Aug 30, 2020","L":"08/30/2020","MM-DD":"08-30"},"excerpt":"<p>整理成了 PPT 形式，<a href=\"http://47.110.12.131/problem/6666/testdata/download/%E6%95%B0%E5%AD%A6%E8%AF%BE.pptx\" target=\"_blank\">链接。</a></p>","link":"math","tags":["math"],"categories":["Algorithm","OI"]},{"title":"【Solution】[NOI Online #1 入门组] 文具订购-DP","date":"2020-03-08T00:00:00.000Z","date_formatted":{"ll":"Mar 8, 2020","L":"03/08/2020","MM-DD":"03-08"},"excerpt":"<p><a href=\"https://www.luogu.com.cn/problem/P6188\" target=\"_blank\">题目传送门。</a></p>","link":"solution-luogu-6188","tags":["动态规划，DP"],"categories":["OI","Solution"]},{"title":"【Algorithm Notes】LCA Tarjan求法","date":"2020-02-06T00:00:00.000Z","date_formatted":{"ll":"Feb 6, 2020","L":"02/06/2020","MM-DD":"02-06"},"excerpt":"<h2 id=\"流程\">流程<a title=\"#流程\" href=\"#流程\"></a></h2>\n<p>前置操作分为以下几步:</p>\n<ol>\n<li>使用 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"3.662ex\" height=\"2.009ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -719.6 1576.5 865.1\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">\\texttt{DFS}</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJTT-44\" d=\"M38 1Q16 8 16 38Q16 62 32 73Q39 76 58 76H78V535H58Q40 535 32 538Q16 548 16 573Q16 587 17 591Q23 604 34 607T83 611H166H176Q188 611 209 611T239 612Q299 612 337 597T415 530Q485 438 485 300Q485 180 431 100T301 3L291 1H38ZM400 301Q400 363 385 410T346 482T303 519T267 534Q261 535 210 535H162V76H214L267 77Q323 89 361 148T400 301Z\"></path>\n<path stroke-width=\"1\" id=\"E1-MJTT-46\" d=\"M384 260Q384 230 377 221T342 212Q317 212 309 220Q300 229 300 252V268H179V76H249Q264 67 267 61T271 38Q271 10 249 1H44Q22 9 22 32V38Q22 63 39 73Q45 76 69 76H95V535H69H59Q42 535 32 542T22 573Q22 602 44 610H50Q56 610 66 610T91 610T125 610T164 611T208 611T257 611H468Q470 609 475 606T481 602T485 598T488 593T489 586T490 576T490 562V526V488Q490 452 472 444Q468 442 448 442Q423 442 415 450Q408 457 407 463T406 501V535H179V344H300V360Q300 383 309 392T342 401Q373 401 382 381Q384 376 384 306V260Z\"></path>\n<path stroke-width=\"1\" id=\"E1-MJTT-53\" d=\"M52 454Q52 524 107 572T229 621Q266 621 274 620Q326 610 360 588L371 581Q377 594 379 598T386 610T397 619T412 622Q433 622 439 610T446 570Q446 563 446 545T445 515V479Q445 441 444 432T436 417Q428 408 403 408T370 417Q361 424 361 434Q361 439 360 448T351 476T331 509T295 535T238 546Q194 546 163 522T132 458Q132 435 148 412Q155 401 166 393T192 380T218 371T247 364T270 359Q341 342 349 339Q389 325 418 296T461 229Q472 201 472 164Q469 92 417 41T287 -11Q240 -11 200 -1T143 19L126 29Q117 6 109 -2Q100 -11 84 -11Q64 -11 58 1T51 42Q51 49 51 66T52 95V135Q52 173 53 180T61 194Q70 203 95 203Q119 203 127 194Q136 186 136 168Q143 66 284 66H290Q325 66 350 85Q391 115 391 165Q391 204 369 228T322 260Q320 260 255 275T185 293Q123 309 88 355T52 454Z\"></path>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJTT-44\"></use>\n <use xlink:href=\"#E1-MJTT-46\" x=\"525\" y=\"0\"></use>\n <use xlink:href=\"#E1-MJTT-53\" x=\"1051\" y=\"0\"></use>\n</g>\n</svg> 遍历整棵树</li>\n<li>当一个节点被访问过时, 将其标记为<code>1</code></li>\n<li>当一个节点<strong>及其子树</strong>(或其本身就是<strong>叶子节点</strong>)都被访问过时, 将该点标记为<code>2</code></li>\n</ol>","link":"algorithm-lca-2","tags":["LCA","Tarjan","数据结构"],"categories":["Algorithm","OI"]},{"title":"【Algorithm Notes】LCA倍增求法","date":"2020-01-28T00:00:00.000Z","date_formatted":{"ll":"Jan 28, 2020","L":"01/28/2020","MM-DD":"01-28"},"excerpt":"<h2 id=\"定义\">定义<a title=\"#定义\" href=\"#定义\"></a></h2>\n<p>一个点的<strong>祖先</strong>:从该节点出发, 一路<strong>向上</strong>走能碰到的就是其祖先了</p>\n<p>两个点的<strong>公共祖先</strong>: 就是<strong>同一棵树</strong>上两个节点的<strong>祖先集合</strong>中的<strong>交集</strong></p>\n<p><strong>最近公共祖先</strong>就是这个交集里面最<strong>靠下</strong>的</p>","link":"algorithm-lca","tags":["LCA","倍增","数据结构"],"categories":["Algorithm","OI"]},{"title":"【Solution】[JSOI2008]最大数-ST表","date":"2020-01-15T00:00:00.000Z","date_formatted":{"ll":"Jan 15, 2020","L":"01/15/2020","MM-DD":"01-15"},"excerpt":"<p><a href=\"https://www.luogu.com.cn/problem/P1198\" target=\"_blank\">题目传送门。</a></p>","link":"solution-luogu-1198","tags":["ST表","倍增"],"categories":["OI","Solution"]}]}